ext {
    //Production
    prodFlavor
    prodBaseUrl

    //Development
    devFlavor
    devBaseUrl

    //Versions
    versionMajor
    versionMinor
    versionPatch

    //Global config
    androidApplicationId = 'weather.search.app.mobile'
    androidVersionCode = versionCode
    androidVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"
}

buildscript {
    ext {
        GRADLE_SCRIPT = { scriptName ->
            file("${rootProject.projectDir}/${scriptName}.gradle")
        }
    }
    apply from: GRADLE_SCRIPT('dependencies')

    def versionPropsFile = file('app/gradle.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))

        def major = versionProps['VERSION_MAJOR'].toInteger()
        def minor = versionProps['VERSION_MINOR'].toInteger()
        def patch = versionProps['VERSION_PATCH'].toInteger()
        def code = versionProps['VERSION_CODE'].toInteger()

        ext.versionMajor = major
        ext.versionMinor = minor
        ext.versionPatch = patch
        ext.versionCode = code.toInteger()
    }

    def developmentPropsFile = file('development.properties')
    if (developmentPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(developmentPropsFile))
        ext.devFlavor = versionProps['FLAVOR'].toString()
        ext.devBaseUrl = versionProps['BASE_URL'].toString()
    }

    def productionPropsFile = file('production.properties')
    if (productionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(productionPropsFile))
        ext.prodFlavor = versionProps['FLAVOR'].toString()
        ext.prodBaseUrl = versionProps['BASE_URL'].toString()
    }

    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath gradleDependencies.androidGradlePlugin
        classpath gradleDependencies.kotlinGradlePlugin
        classpath gradleDependencies.kotlinExtGradlePlugin
        classpath gradleDependencies.safeArgsGradlePlugin
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
